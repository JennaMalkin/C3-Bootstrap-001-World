iscr



new: simp 1 1 127 "blnk" 2 0 0
accg 0
perm 0
tick 400
attr 0
anim [0]
setv ov72 2120
setv ov73 550

mvto 1888 2070







reps 6
	new: simp 2 16 6 "rocklice" 94 0 2500
	mvto 1500 2050
	accg 2
	perm 60
	tick 8
	attr 195
	aero 0
	elas 10
	fric 70
	bhvr 17

	setv ov30 0
	setv ov31 8
	setv ov32 16
	setv ov33 23
	setv ov34 26
	setv ov35 30
	setv ov36 39
	setv ov37 49
	setv ov38 55
	setv ov39 64
	setv ov40 72
	setv ov41 83

	setv ov00 0
	setv ov01 0
	setv ov02 410
	setv ov05 2
	setv ov06 rand 0 1
	setv ov10 1
	setv ov11 -1
	seta ov16 null
	setv ov20 0
	setv ov61 70
	setv ov72 400
	setv ov73 400
	setv ov74 800
	setv ov75 1
	setv ov80 0
	mvto 1500 2050
	velo rand -10 10 rand -10 -20
repe
targ ownr

endm


scrp 1 1 127 9
	inst
	rnge 800
	esee 2 16 6
		addv va00 1
	next

	doif va00 < 3
		new: simp 2 16 6 "rocklice" 94 0 2500
		accg 2
		perm 60
		tick 8
		attr 195
		aero 0
		elas 10
		fric 70
		bhvr 17

		setv ov30 0
		setv ov31 8
		setv ov32 16
		setv ov33 23
		setv ov34 26
		setv ov35 30
		setv ov36 39
		setv ov37 49
		setv ov38 55
		setv ov39 64
		setv ov40 72
		setv ov41 83

		setv ov00 0
		setv ov01 0
		setv ov02 410
		setv ov05 2
		setv ov06 rand 0 1
		setv ov10 1
		setv ov11 -1
		seta ov16 null
		setv ov20 0
		setv ov61 70
		setv ov72 400
		setv ov73 400
		setv ov74 800
		setv ov75 1
		setv ov80 0
		mvto 1888 2070
		setv vely 0

	endi
	targ ownr
	rnge 800
	setv va00 0
	enum 2 16 7
		addv va00 1
	next

	doif va00 < 1

		new: simp 2 16 7 "kobold" 0 0 4000
		accg 4
		perm 60
		tick 4
		attr 195
		aero 5
		elas 5
		fric 10


		setv ov30 0

		setv ov31 12

		setv ov32 42

		setv ov33 52

		setv ov34 24

		setv ov35 33

		setv ov36 62

		setv ov37 74

		setv ov38 86

		setv ov39 99


		setv ov00 0
		setv ov01 2000
		setv ov02 401
		setv ov05 2
		setv ov06 rand 0 1
		setv ov10 -1
		setv ov11 -1
		seta ov16 null
		setv ov20 0
		setv ov61 95
		setv ov72 400
		setv ov73 400
		setv ov74 800
		setv ov75 1

		mvto 1888 2050
		velo rand -10 10 rand -10 -20


	endi

endm

scrp 2 16 6 1
	stim writ from 88 1
endm

scrp 2 16 6 12
	stim writ from 80 5
endm

scrp 2 16 6 9
	doif ov00 <> 2
		addv ov01 1
		subv ov02 1
	endi
	addv ov20 1
	doif ov01 gt 1100





		gsub die_
	endi

	doif ov02 < ov72 and ov00 <> 2
		setv ov00 1
	endi





	doif rand 0 1000 = 0 and ov00 <> 2
		setv ov00 97
	endi

	doif ov00 = 97
		gsub slep
	endi

	doif ov00 = 98
		gsub wake
	endi

	tick 8

	doif ov00 eq 0
		doif ov20 > 800 and obst down = 0
			gsub layg
		endi
		gsub roam
	endi



	doif ov00 = 2
		gsub trap
	endi

	doif ov00 = 1 and carr = null
		gsub bury
	else
		setv ov00 0
	endi

	subr die_
		setv va50 posl
		setv va51 post
		setv va52 ov10
		subv va51 4



		new: simp 2 10 32 "rocklice" 21 72 2000



		accg 2
		elas 0
		fric 80
		tick 4
		attr 192
		aero 0
		setv ov10 va52
		setv ov61 30
		setv ov01 0
		setv va88 tmvt va50 va51
		doif va88 <> 1
			kill targ
			kill ownr
		endi
		mvto va50 va51
		setv vely 0
		doif ov01 <= 0
			base 0
			anim [0 1 2 3 4 5 6]
		endi
		doif ov01 > 0
			base 10
			anim [0 1 2 3 4 5 6]
		endi

		targ ownr
		kill targ
	retn

	subr slep
		attr 192
		snde "rdrl"
		anim []
		base ov35
		anim [0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8]
		over
		base ov36
		anim [0 1 2 3 4 5 6 7 8 9]
		over

		setv ov00 98
		tick rand 50 500
		stop
	retn

	subr wake
		base ov38
		anim [0 1 2 3 4 5 6 7 8]
		over
		setv ov00 0
		tick 8
		attr 195
		stop
	retn

	subr layg
		setv va50 posl
		setv va51 post
		subv va51 32

		inst
		rnge 600
		esee 2 16 6
			addv va66 1
		next
		doif va66 <= 3
			new: simp 2 18 13 "rocklice" 17 95 4100
			accg 2
			perm 60
			tick 10
			elas 5
			fric 20
			attr 195
			bhvr 16
			setv ov00 0
			setv ov01 0
			setv ov61 30
			setv ov70 0
			setv ov90 0
			setv ov02 255
			setv va88 tmvt va50 va51
			doif va88 <> 1
				seta va88 targ
				targ ownr
				kill va88
				stop
			else
				mvto va50 va51
				setv vely 0
				anim [0]
			endi
		endi
		doif va66 = 0
			reps 2
				new: simp 2 18 13 "rocklice" 17 95 4100
				accg 2
				perm 60
				tick 10
				elas 5
				fric 20
				attr 195
				bhvr 16
				setv ov00 0
				setv ov01 0
				setv ov61 30
				setv ov70 0
				setv ov90 0
				setv ov02 255
				setv va88 tmvt va50 va51
				doif va88 <> 1
					seta va88 targ
					targ ownr
					kill va88
					stop
				else
					mvto va50 va51
					setv vely 0
					anim [0]
				endi
			repe
		endi

		targ ownr
		gsub vect
		gsub anim
		gsub move
		setv ov70 0
		setv ov00 0
		setv ov20 0
		stop
	retn

	subr roam
		doif obst down < 10
			setv va67 rand 0 10
			setv va66 rand 0 10
			doif va67 < 2 and obst down <= 5
				setv ov80 1
				anim []
				base ov32
				anim [0 1 2 3 4 5]
				over
				anim [6 7]
				velo rand -20 20 -30
			endi
			setv ov75 1
			doif va66 lt 2
				setv ov10 rand -1 1
			endi
			doif va66 gt 5
				setv ov11 rand -1 1
				setv ov11 -1
			endi

			doif obst down < 5
				gsub vect
				gsub anim
				gsub move
			else
				setv ov80 1
			endi
			stop
			stop
		else
		endi
	retn

	subr dril
		base ov35
		anim [0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8]
		over
		base ov36
		anim [0 1 2 3 4 5 6 7 8 9]
		over
		wait 5
		base ov37
		anim [0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7]
		over
		wait 10
		base ov38
		anim [0 1 2 3 4 5 6 7 8]
		over



	retn

	subr bury
		lock
		attr 192
		snde "rdrl"
		anim []
		base ov35
		anim [0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8]
		over
		base ov36
		anim [0 1 2 3 4 5 6 7 8 9]
		over
		setv ov00 2
		unlk
	retn

	subr trap
		setv va33 0
		seta va34 null
		inst
		etch 2 13 0
			doif targ <> ownr
				setv va33 1
				seta va34 targ
			endi
		next
		etch 2 14 0
			doif targ <> ownr
				setv va33 1
				seta va34 targ
			endi
		next
		doif va33 = 1
			anim []
			base ov37
			anim [0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7]
			mesg wrt+ va34 12 0 0 0
			addv ov02 ov73
			lock
			slow
			over
			doif ov02 > ov74
				anim []
				base ov38
				anim [0 1 2 3 4 5 6 7 8]
				over
				setv ov00 0
				attr 195
			endi
		endi
		stop
	retn

	subr gfod
		setv va47 2
		setv va48 14
		setv va49 0
		doif ov16 = null
			gsub find
		endi
		doif ov16 = null
			setv va47 2
			setv va48 13
			setv va49 0
			gsub find
		endi
		doif ov16 <> null
			gsub hunt
			gsub near
			doif va40 eq 1
				targ ownr
				addv ov02 ov72
				mesg writ ov16 12
				doif ov02 gt ov74
					setv ov00 0
				endi
			endi
		else
			targ ownr
			setv ov00 0
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn



	subr vect
		setv va10 rand 8 10
		setv va11 rand 2 5
	retn

	subr anim
		doif ov10 eq 0
			loop
				setv ov10 rand -1 1
			untl ov10 ne 0
		endi

		doif ov10 <= 0
			anim []
			base ov30
			anim [0 1 2 3 4 5 6]
		endi

		doif ov10 > 0
			anim []
			base ov31
			anim [0 1 2 3 4 5 6]
		endi
	retn

	subr move
		mulv va10 ov10
		mulv va11 ov11
		setv velx va10
		setv vely va11

	retn

	subr find
		setv va99 99999999
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				setv va88 0
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
			endi
		next
		doif va58 <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
		slow
	retn

	subr hunt
		inst
		targ ov16
		doif targ <> null
			setv va50 posx
			setv va51 posy
			targ ownr
			doif posx lt va50
				setv ov10 1
			endi
			doif posx gt va50
				setv ov10 -1
			endi
			doif posy lt va51
				setv ov11 1
			endi
			doif posy gt va51
				setv ov11 -1
			endi
		else
			targ ownr
			seta ov16 null
			setv ov00 0
		endi
	retn


	subr near
		setv va40 0
		doif ov16 <> null
			inst
			targ ov16
			setv va50 posx
			setv va51 posy
			setv va52 posx
			setv va53 posy
			subv va50 10
			subv va51 10
			addv va52 10
			addv va53 10
			targ ownr
			doif posx gt va50
				doif posy gt va51
					doif posx lt va52
						doif posy lt va53
							setv va40 1
						endi
					endi
				endi
			endi
			slow
		endi
	retn
endm

scrp 2 16 6 6
	inst
	doif obst down <= 5 and _p2_ > 5
		snde "rckl"

		doif _p1_ > 0
			anim []
			base ov32
			anim [4 3 2 1 0]
			setv ov10 -1
		endi
		doif _p1_ <= 0
			anim []
			base ov32
			anim [4 3 2 1 0]
			setv ov10 1
		endi

	endi
	setv ov80 0
endm

scrp 2 18 13 9
	doif posx < 0 or posy < 0
		kill ownr
	endi
	addv ov01 1
	doif ov01 < 5
		pose ov01
	endi
	rnge 600
	esee 2 16 6
		addv va66 1
	next

	doif ov01 >= 20 and carr = null and va66 < 3 and ov90 = 0
		anim []
		base 6
		anim [0 1 2 3 4 5 6]
		setv va50 posl
		setv va51 post
		subv va51 25
		new: simp 2 16 6 "rocklice" 94 0 2500
		accg 2
		perm 60
		tick 8
		attr 195
		aero 0
		elas 10
		fric 20
		bhvr 17

		setv ov30 0
		setv ov31 8
		setv ov32 16
		setv ov33 23
		setv ov34 26
		setv ov35 30
		setv ov36 39
		setv ov37 49
		setv ov38 55
		setv ov39 64
		setv ov40 72
		setv ov41 83

		setv ov00 0
		setv ov01 0
		setv ov02 600
		setv ov05 2
		setv ov06 rand 0 1
		setv ov10 1
		setv ov11 -1
		seta ov16 null
		setv ov20 0
		setv ov61 70
		setv ov72 400
		setv ov73 400
		setv ov74 800
		setv ov75 1
		setv ov80 0
		setv va88 tmvt va50 va51
		doif va88 <> 1
			kill targ
		else
			mvto va50 va51
			setv vely 0
			targ ownr
			setv ov90 1
		endi
		targ ownr

		over

	endi
	doif ov01 >= 60 and carr = null
		base 12
		anim [0 1 2]
		over
		kill targ
	endi
endm

scrp 2 10 32 9
	addv ov01 1
	doif ov01 > 40
		doif ov01 <= 0
			base 0
			anim [7 8 9]
			doif room targ <> -1
				doif carr = null
					altr room targ 3 0.2
					altr room targ 4 0.2
				endi
			endi
		endi
		doif ov01 > 0
			base 10
			anim [7 8 9]
			doif room targ <> -1
				doif carr = null
					altr room targ 3 0.2
					altr room targ 4 0.2
				endi
			endi
		endi

		over
		kill targ
	endi
endm

scrp 2 18 13 12
	stim writ from 80 2
	kill ownr
endm


rscr

enum 2 16 6
	kill targ
next
scrx 2 16 6 9
scrx 2 16 6 6

enum 2 10 32
	kill targ
next
scrx 2 10 32 9
scrx 2 10 32 6


enum 2 18 13
	kill targ
next
scrx 2 18 13 9
scrx 2 18 13 6

enum 1 1 127
	kill targ
next
scrx 1 1 127 9

endm