iscr
inst
reps 4
	new: simp 2 14 3 "beetle2" 36 0 2500
	accg 2
	perm 100
	tick 8
	attr 195
	aero 0
	elas 1
	fric 20

	bhvr 17













	setv ov30 0
	setv ov31 11
	setv ov32 22
	setv ov33 29
	setv ov34 0
	setv ov35 0
	setv ov36 0


	setv ov00 0
	setv ov01 2000
	setv ov02 600
	setv ov05 2
	setv ov06 rand 0 1
	setv ov10 1
	setv ov11 -1
	seta ov16 null
	setv ov20 0
	setv ov61 42
	setv ov72 400
	setv ov73 400
	setv ov74 800
	setv ov75 1

	setv ov80 50

	mvto 1700 2050
	setv vely 0
repe

targ ownr

endm


scrp 2 14 3 1
	stim writ from 88 1
endm

scrp 2 14 3 12
	stim writ from 80 1
	kill ownr
endm


scrp 2 14 3 9
	inst
	addv ov01 1
	subv ov02 1
	doif carr = null
		doif rtyp room ownr = 8 or rtyp room ownr = 9
			subv ov02 100
		endi
	endi



	doif ov01 gt 2010
		setv va66 ov01
		modv va66 10
		doif va66 eq 0
			addv ov20 1
		endi
	endi



	doif ov00 eq 99
		gsub die_
	endi


	doif ov02 lt ov73
		setv ov00 1
	endi










	doif ov00 eq 99
		gsub die_
	endi
	doif ov00 eq 1
		gsub gfod
	endi










	doif ov00 eq 0
		doif obst down > 10 and ov80 > 0
			gsub fly_
		else
			gsub roam
		endi
	endi





	subr die_
		setv va50 posx
		setv va51 posy
		setv va52 ov10
		subv va50 20
		subv va51 8
		doif ov01 gt 2000
			new: simp 2 10 29 "beetle2" 8 16 2000
		else
			new: simp 2 10 29 "beetle2" 8 40 2000
		endi
		accg 2


		tick 4
		attr 195
		aero 0
		setv ov10 va52
		setv ov01 0
		setv ov61 11
		mvto va50 va51
		setv vely 0
		targ ownr
		kill targ
	retn

	subr gfod
		setv va47 2
		setv va48 10
		setv va49 0
		doif ov16 = null
			gsub find
		endi
		doif ov16 <> null
			inst
			gsub hunt
			slow
			doif touc ov16 ownr <> 0
				inst
				targ ownr
				addv ov02 ov72
				doif ov16 <> null
					mesg writ ov16 12
				endi
				doif ov02 gt ov74
					setv ov00 0
				endi
				slow
			endi
		else
			targ ownr
			setv ov00 0
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr layg
		setv va50 posx
		setv va51 posy
		subv va50 15
		subv va51 8
		doif ov10 le 0
			subv va50 0
		endi

		doif ov10 gt 0
			subv va50 32
		endi

		inst
		new: simp 2 18 8 "beetle2" 4 48 4100
		accg 2


		tick 10
		attr 195




		setv ov00 0
		setv ov01 0
		setv ov70 0
		setv ov61 20
		setv ov02 255
		mvto va50 va51
		setv vely 0

		targ ownr
		gsub vect
		gsub anim
		gsub move
		setv ov70 0
		setv ov00 0
		stop
	retn

	subr matr
		setv va50 ov00
		setv va51 ov06
		setv va52 posx
		setv va53 posy
		subv va52 32
		subv va53 12
		inst
		new: simp 2 14 3 "beetle2" 23 0 2500
		accg 0


		tick 8
		attr 195
		aero 0












		setv ov00 va50
		setv ov01 2000
		setv ov02 800
		setv ov05 2
		setv ov06 va51
		setv ov10 1
		setv ov11 -1
		seta ov16 null
		setv ov20 0
		setv ov72 400
		setv ov73 400
		setv ov74 800

		mvto va52 va53

		targ ownr
		kill targ
		stop

	retn




	subr roam
		setv va67 rand 0 5
		setv va66 rand 0 20
		doif va67 = 0 and ov80 > 0
			anim []
			doif ov10 <= 0
				base 22
			endi
			doif ov10 > 0
				base 29
			endi
			anim [0 1 2 3 4]
			over
			gsub fly_
		endi
		addv ov80 1
		doif ov80 > 100
			setv ov80 100
		endi
		setv ov75 1
		doif va66 lt 2
			setv ov10 rand -1 1
		endi
		doif va66 gt 5
			setv ov11 rand -1 1
			setv ov11 -1
		endi
		doif ov10 eq 0
			loop
				setv ov10 rand -1 1
			untl ov10 ne 0
		endi


		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr fly_
		snde "btle"
		subv ov80 1
		velo rand -5 5 rand -5 -15
		gsub anim
		gsub move
		stop
	retn


	subr vect
		setv va10 rand 8 10
		setv va11 rand 2 5
	retn

	subr anim

		doif obst down <= 10
			anim []
			doif ov10 <= 0
				base ov30
				anim [0 1 2 3 4 5 6 7 8 9 10]
			endi

			doif ov10 > 0
				base ov31
				anim [0 1 2 3 4 5 6 7 8 9 10]
			endi
		endi
		doif obst down > 10
			setv ov11 -1
			anim []
			doif ov10 <= 0
				base ov32
				anim [5 6 255]
				setv va10 rand 4 20
				setv va11 rand 5 30
			endi
			doif ov10 > 0
				base ov33
				anim [5 6 255]
				setv va10 rand 4 20
				setv va11 rand 5 30
			endi
		endi

	retn

	subr move
		mulv va10 ov10
		mulv va11 ov11
		velo va10 va11
	retn



	subr find
		setv va99 99999999
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				setv va88 0
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
			endi
		next
		doif va58 <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
		slow
	retn


	subr hunt
		inst
		doif ov16 <> null
			targ ov16
			setv va50 posx
			setv va51 posy
			targ ownr
			doif posx lt va50
				setv ov10 1
			endi
			doif posx gt va50
				setv ov10 -1
			endi
			doif posy lt va51
				setv ov11 -1
			endi
			doif posy gt va51
				setv ov11 -1
			endi
		else
			setv ov00 0
			seta ov16 null
			stop
		endi
	retn
endm

scrp 2 14 3 6
	doif _p1_ > 0 and _p2_ < -4
		setv ov10 -1
	endi
	doif _p1_ <= 0 and _p2_ < -4
		setv ov10 1
	endi
	setv ov80 0
endm



rscr

enum 2 14 3
	kill targ
next
scrx 2 14 3 9
scrx 2 14 3 6


endm