
inst

new: comp 3 3 57 "env_con" 16 0 0
attr 20
clac 0

setv ov01 4
setv ov02 4
setv ov03 0
mvto 5364 929



new: comp 3 3 58 "env_con" 16 0 0
attr 20
clac 0

setv ov01 2
setv ov02 2
setv ov03 2
mvto 4305 2316



new: comp 3 3 56 "env_con" 16 0 0
attr 20
clac 0

setv ov01 1
setv ov02 3
setv ov03 3
mvto 761 2048



new: comp 3 3 55 "env_con" 16 0 0
attr 20
clac 0

setv ov01 2
setv ov02 2
setv ov03 2
mvto 938 869






scrp 3 3 55 1
	lock












	clac -1
	doif ov00 eq 0
		sndc "env1"
		part 0
		anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
		over

		pat: butt 1 "env_con" 16 5 25 25 0 [] 1000 0
		part 1
		pose ov01

		pat: butt 2 "env_con" 21 5 84 26 0 [] 1001 0
		part 2
		pose ov02

		pat: butt 3 "env_con" 28 2 71 38 0 [] 1000 0

		pat: butt 4 "env_con" 26 2 53 63 0 [] 1001 0
		setv ov00 1

		pat: butt 5 "env_con" 30 2 50 37 0 [] 1002 0

		prt: inew 0 "input" "" 60 88 1010
		prt: onew 0 "output" "" 74 88
	else
		sndc "env2"
		prt: bang 100
		prt: izap 0
		prt: ozap 0
		pat: kill 1
		pat: kill 2
		pat: kill 3
		pat: kill 4
		pat: kill 5
		part 0
		anim [15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0]
		over
		setv ov00 0
	endi
	clac 0
endm

scrp 3 3 55 1000
	sndc "beep"
	part 3
	anim [0 1 0 1 0]

	doif ov99 eq 0


		doif ov01 lt 4
			addv ov01 1
		else
			setv ov01 0
		endi
		part 1
		pose ov01
	else

		doif ov03 lt 4
			addv ov03 1
		else
			setv ov03 0
		endi
		part 1
		pose ov03
	endi
endm

scrp 3 3 55 1001
	sndc "beep"
	part 4
	anim [0 1 0 1 0]


	doif ov02 lt 4
		addv ov02 1
	else
		setv ov02 0
	endi
	part 2
	pose ov02
endm

scrp 3 3 55 1002
	sndc "beep"
	inst

	doif ov99 eq 0
		part 5
		pose 1
		part 1
		pose ov03
		setv ov99 1

	else
		part 5
		pose 0
		part 1
		pose ov01
		setv ov99 0
	endi
endm

scrp 3 3 55 1010
	doif _p1_ lt 0
		mesg writ ownr 1000
	elif _p1_ gt 0
		mesg writ ownr 1001
	endi
	prt: send 0 _p1_
endm


scrp 3 3 56 1
	lock






	clac -1
	doif ov00 eq 0
		sndc "env1"
		part 0
		anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
		over

		pat: butt 1 "env_con" 16 5 25 25 0 [] 1000 0
		part 1
		pose ov01

		pat: butt 2 "env_con" 21 5 84 26 0 [] 1001 0
		part 2
		pose ov02

		pat: butt 3 "env_con" 28 2 71 38 0 [] 1000 0

		pat: butt 4 "env_con" 26 2 53 63 0 [] 1001 0
		setv ov00 1

		pat: butt 5 "env_con" 30 2 50 37 0 [] 1002 0

		prt: inew 0 "input" "" 60 88 1010
		prt: onew 0 "output" "" 74 88
	else
		sndc "env2"
		prt: bang 100
		prt: izap 0
		prt: ozap 0
		pat: kill 1
		pat: kill 2
		pat: kill 3
		pat: kill 4
		pat: kill 5
		part 0
		anim [15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0]
		over
		setv ov00 0
	endi
	clac 0
endm


scrp 3 3 56 1000
	sndc "beep"
	part 3
	anim [0 1 0 1 0]

	doif ov99 eq 0


		doif ov01 lt 4
			addv ov01 1
		else
			setv ov01 0
		endi
		part 1
		pose ov01
	else

		doif ov03 lt 4
			addv ov03 1
		else
			setv ov03 0
		endi
		part 1
		pose ov03
	endi
endm

scrp 3 3 56 1001
	sndc "beep"
	part 4
	anim [0 1 0 1 0]


	doif ov02 lt 4
		addv ov02 1
	else
		setv ov02 0
	endi
	part 2
	pose ov02
endm

scrp 3 3 56 1002
	sndc "beep"
	inst

	doif ov99 eq 0
		part 5
		pose 1
		part 1
		pose ov03
		setv ov99 1

	else
		part 5
		pose 0
		part 1
		pose ov01
		setv ov99 0
	endi
endm

scrp 3 3 56 1010
	doif _p1_ lt 0
		mesg writ ownr 1000
	elif _p1_ gt 0
		mesg writ ownr 1001
	endi
	prt: send 0 _p1_
endm


scrp 3 3 57 1
	lock






	clac -1
	doif ov00 eq 0
		sndc "env1"
		part 0
		anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
		over

		pat: butt 1 "env_con" 16 5 25 25 0 [] 1000 0
		part 1
		pose ov01

		pat: butt 2 "env_con" 21 5 84 26 0 [] 1001 0
		part 2
		pose ov02

		pat: butt 3 "env_con" 28 2 71 38 0 [] 1000 0

		pat: butt 4 "env_con" 26 2 53 63 0 [] 1001 0
		setv ov00 1

		pat: butt 5 "env_con" 30 2 50 37 0 [] 1002 0

		prt: inew 0 "input" "" 60 88 1010
		prt: onew 0 "output" "" 74 88
	else
		sndc "env2"
		prt: bang 100
		prt: izap 0
		prt: ozap 0
		pat: kill 1
		pat: kill 2
		pat: kill 3
		pat: kill 4
		pat: kill 5
		part 0
		anim [15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0]
		over
		setv ov00 0
	endi
	clac 0
endm

scrp 3 3 57 1000
	sndc "beep"
	part 3
	anim [0 1 0 1 0]

	doif ov99 eq 0


		doif ov01 lt 4
			addv ov01 1
		else
			setv ov01 0
		endi
		part 1
		pose ov01
	else

		doif ov03 lt 4
			addv ov03 1
		else
			setv ov03 0
		endi
		part 1
		pose ov03
	endi
endm

scrp 3 3 57 1001
	sndc "beep"
	part 4
	anim [0 1 0 1 0]


	doif ov02 lt 4
		addv ov02 1
	else
		setv ov02 0
	endi
	part 2
	pose ov02
endm

scrp 3 3 57 1002
	sndc "beep"
	inst

	doif ov99 eq 0
		part 5
		pose 1
		part 1
		pose ov03
		setv ov99 1

	else
		part 5
		pose 0
		part 1
		pose ov01
		setv ov99 0
	endi
endm

scrp 3 3 57 1010
	doif _p1_ lt 0
		mesg writ ownr 1000
	elif _p1_ gt 0
		mesg writ ownr 1001
	endi
	prt: send 0 _p1_
endm


scrp 3 3 58 1
	lock






	clac -1
	doif ov00 eq 0
		sndc "env1"
		part 0
		anim [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
		over

		pat: butt 1 "env_con" 16 5 25 25 0 [] 1000 0
		part 1
		pose ov01

		pat: butt 2 "env_con" 21 5 84 26 0 [] 1001 0
		part 2
		pose ov02

		pat: butt 3 "env_con" 28 2 71 38 0 [] 1000 0

		pat: butt 4 "env_con" 26 2 53 63 0 [] 1001 0
		setv ov00 1

		pat: butt 5 "env_con" 30 2 50 37 0 [] 1002 0

		prt: inew 0 "input" "" 60 88 1010
		prt: onew 0 "output" "" 74 88
	else
		sndc "env2"
		prt: bang 100
		prt: izap 0
		prt: ozap 0
		pat: kill 1
		pat: kill 2
		pat: kill 3
		pat: kill 4
		pat: kill 5
		part 0
		anim [15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0]
		over
		setv ov00 0
	endi
	clac 0
endm


scrp 3 3 58 1000
	sndc "beep"
	part 3
	anim [0 1 0 1 0]

	doif ov99 eq 0


		doif ov01 lt 4
			addv ov01 1
		else
			setv ov01 0
		endi
		part 1
		pose ov01
	else

		doif ov03 lt 4
			addv ov03 1
		else
			setv ov03 0
		endi
		part 1
		pose ov03
	endi
endm

scrp 3 3 58 1001
	sndc "beep"
	part 4
	anim [0 1 0 1 0]


	doif ov02 lt 4
		addv ov02 1
	else
		setv ov02 0
	endi
	part 2
	pose ov02
endm

scrp 3 3 58 1002
	sndc "beep"
	inst

	doif ov99 eq 0
		part 5
		pose 1
		part 1
		pose ov03
		setv ov99 1

	else
		part 5
		pose 0
		part 1
		pose ov01
		setv ov99 0
	endi
endm

scrp 3 3 58 1010
	doif _p1_ lt 0
		mesg writ ownr 1000
	elif _p1_ gt 0
		mesg writ ownr 1001
	endi
	prt: send 0 _p1_
endm





rscr
enum 3 3 55
	kill targ
next
enum 3 3 56
	kill targ
next
enum 3 3 57
	kill targ
next
enum 3 3 58
	kill targ
next