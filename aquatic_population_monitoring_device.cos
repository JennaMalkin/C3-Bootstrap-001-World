







new: comp 3 8 16 "aquatic_population_monitoring_device" 16 0 5000
attr 198
bhvr 41
perm 100
accg 4
aero 10
elas 30

pat: butt 1 "aquatic_population_monitoring_device" 16 2 2 32 0 [] 6464 0
pat: butt 2 "aquatic_population_monitoring_device" 18 11 23 30 0 [] 6565 1
pat: butt 3 "aquatic_population_monitoring_device" 29 10 28 66 0 [] 6666 1


prt: inew 0 "input" "device will turn on if it hears 255, off it it hears 0" 9 52 6767
prt: onew 0 "output" "255 if selected species population is lower than wanted" 9 66

part 1
pose 1
setv ov72 1
SETV OV61 100
mvto 4516 2151
emit 18 .35
tick 0


scrp 3 8 16 1
	stim writ from 90 1
	mesg writ ownr 6565
endm

scrp 3 8 16 3
	sndc "hit_"
	velo 0 rand -5 -10
	prt: bang rand 60 100
	stim writ from 92 1
endm

scrp 3 8 16 4
	targ from
	doif fmly = 4
		stim writ targ 91 1
	endi
endm

scrp 3 8 16 6767
	setv va00 _p1_
	doif va00 > 0
		mesg writ ownr 6464
	endi
endm



scrp 3 8 16 6464
	lock
	doif ov01 = 0
		part 1
		pose 0
		snde "bep2"
		setv ov01 1
		setv ov02 1
		setv ov03 1
		setv ov72 2
		setv ov73 1
		part 0
		frat 2
		anim [0 1 2 3 4 5 6]
		over
		frat 4
		anim [6 7 8 9 10 11 12 13 255]
		part 2
		pose ov72

		setv ov81 15
		setv ov82 18
		setv ov83 18
		setv ov84 16
		part 3
		pose 1
		tick 1
	elif ov01 = 1
		part 1
		pose 1
		snde "bep2"
		part 0
		frat 2
		anim [6 5 4 3 2 1 0]
		part 2
		pose 0
		part 3
		pose 0

		setv ov01 0
		setv ov02 0
		setv ov03 0

		setv ov72 2

		setv ov73 1
		tick 0
	endi
endm

scrp 3 8 16 6565
	lock
	doif ov02 = 1
		snde "bep2"
		addv ov72 1
		doif ov72 = 11
			setv ov72 2
		endi
		part 2
		pose ov72
		doif ov72 = 2
			setv ov80 1

			setv ov81 15
			setv ov82 18

			setv ov83 18
			setv ov84 16
		elif ov72 = 3
			setv ov80 1

			setv ov81 15
			setv ov82 14

			setv ov83 18
			setv ov84 14
		elif ov72 = 4
			setv ov80 1

			setv ov81 15
			setv ov82 19

			setv ov83 18
			setv ov84 17
		elif ov72 = 5
			setv ov80 1

			setv ov81 15
			setv ov82 16

			setv ov83 18
			setv ov84 18
		elif ov72 = 6
			setv ov80 1

			setv ov81 15
			setv ov82 15

			setv ov83 18
			setv ov84 15
		elif ov72 = 7
			setv ov80 0

			setv ov81 13
			setv ov82 8

			setv ov83 99
			setv ov84 99
		elif ov72 = 8
			setv ov80 0

			setv ov81 4
			setv ov82 8

			setv ov83 99
			setv ov84 99
		elif ov72 = 9
			setv ov80 0

			setv ov81 4
			setv ov82 7

			setv ov83 99
			setv ov84 99
		elif ov72 = 10
			setv ov80 0

			setv ov81 4
			setv ov82 10

			setv ov83 99
			setv ov84 99
		endi
	elif ov02 = 0
		snde "excl"
	endi
endm

scrp 3 8 16 6666
	lock
	doif ov03 = 1 and ov73 = 1
		snde "bep2"
		setv ov73 2
		part 3
		pose 2
	elif ov03 = 1 and ov73 = 2
		snde "bep2"
		setv ov73 3
		part 3
		pose 3
	elif ov03 = 1 and ov73 = 3
		snde "bep2"
		setv ov73 4
		part 3
		pose 4
	elif ov03 = 1 and ov73 = 4
		snde "bep2"
		setv ov73 5
		part 3
		pose 5
	elif ov03 = 1 and ov73 = 5
		snde "bep2"
		setv ov73 10
		part 3
		pose 6
	elif ov03 = 1 and ov73 = 10
		snde "bep2"
		setv ov73 15
		part 3
		pose 7
	elif ov03 = 1 and ov73 = 15
		snde "bep2"
		setv ov73 20
		part 3
		pose 8
	elif ov03 = 1 and ov73 = 20
		snde "bep2"
		setv ov73 25
		part 3
		pose 9
	elif ov03 = 1 and ov73 = 25
		snde "bep2"
		setv ov73 1
		part 3
		pose 1
	elif ov03 = 0
		snde "excl"
	endi
endm

scrp 3 8 16 9
	rnge 1000
	esee 2 ov81 ov82
		addv va00 1
	next
	doif ov80 = 1
		rnge 1000
		esee 2 ov83 ov84
			addv va00 1
		next
	endi
	doif va00 < ov73
		doif ov81 = 13 and ov82 = 8
			prt: send 0 255
		else
			prt: send 0 ov72
		endi
	endi
endm

rscr
enum 3 8 16
	kill targ
next
scrx 3 8 16 1
scrx 3 8 16 9
scrx 3 8 16 6464
scrx 3 8 16 6565
scrx 3 8 16 6666
scrx 3 8 16 3
