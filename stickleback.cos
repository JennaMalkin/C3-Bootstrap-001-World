iscr
inst
reps 6
	new: simp 2 15 9 "trout" 23 0 4000
	accg 0
	perm 30
	tick 8
	attr 195
	aero 10
	bhvr 16
	elas 10
	setv ov00 0
	setv ov01 1000
	setv ov02 3000
	setv ov05 2
	setv ov06 va66
	setv ov10 1
	setv ov11 -1
	seta ov16 null
	setv ov20 98
	setv ov61 60
	setv ov72 400
	setv ov73 400
	setv ov74 800




	mvto 4000 1020
	setv vely 0
	doif va66 = 1
		setv va66 0
	else
		setv va66 1
	endi

repe


endm

scrp 2 15 9 5

	accg 4
endm

scrp 2 15 9 12
	stim writ from 80 4
	kill ownr

endm

scrp 2 15 9 9
	addv ov01 1
	subv ov02 1
	addv ov20 1







	doif rtyp room ownr <> 8 and rtyp room ownr <> 9
		accg 4
	else
		accg 0
	endi
	doif ov02 <= 0 or ov01 > 8000
		setv ov00 99
	endi







	doif ov01 gt 1500
		doif ov05 eq 1
			gsub matr
		endi
	endi


	doif obst 0 lt 30
		setv ov10 1
		setv ov11 -1
	endi
	doif obst 1 lt 30
		setv ov10 -1
		setv ov11 -1
	endi

	doif obst 2 lt 30
		setv ov11 1
	endi
	doif obst 3 lt 30
		setv ov11 -1
	endi

	doif ov00 eq 99
		gsub die_
	endi

	doif carr = null
		doif rtyp room ownr <> 8 and rtyp room ownr <> 9
			setv ov11 1
			subv ov02 40
			setv vely 4

			gsub anim

			stop
		elif rtyp room ownr = 9
			subv ov02 40
		else
			accg 0
		endi
	endi

	doif ov02 lt ov73
		setv ov00 1
	endi


	doif ov20 gt 100
		setv ov00 2
	endi


	doif ov00 eq 99
		gsub die_
	endi
	doif ov00 eq 1
		gsub gfod
	endi

	doif ov00 eq 2

		gsub chsx
		setv va47 2
		setv va48 15
		setv va49 9
		setv va45 ov06
		gsub seek
		doif ov16 <> null
			setv ov00 3
		else
			setv ov00 0
		endi
	endi

	doif ov00 eq 3
		gsub mate
	endi

	doif ov70 = 1
		setv ov00 4
	endi

	doif ov00 eq 4
		gsub layg
	endi


	doif ov00 eq 0
		gsub roam
	endi


	subr die_
		setv va50 posl
		setv va51 post
		setv va52 ov10


		doif ov01 gt 2000
			new: simp 2 10 7 "trout" 8 16 2000
		else
			new: simp 2 10 7 "trout" 8 40 2000
		endi
		accg 2
		elas 0
		fric 70
		tick 4
		attr 192
		aero 0
		setv ov10 va52
		setv ov61 30
		setv ov01 0
		doif tmvt va50 va51 <> 1
			kill targ
			kill ownr
		endi

		mvto va50 va51
		setv vely 0
		targ ownr
		kill targ
	retn

	subr gfod
		setv va47 2
		setv va48 14
		setv va49 0
		inst
		doif ov16 = null
		endi
		gsub find
		doif ov16 = null
			setv va47 2
			setv va48 13
			setv va49 0
			gsub find
		endi
		inst
		targ ov16
		doif targ <> null
			targ ownr
			gsub hunt
			inst
			doif touc ownr ov16 <> 0
				targ ownr
				addv ov02 ov72
				mesg writ ov16 12
				doif ov02 gt ov74
					setv ov00 0
				endi
			endi
		else
			targ ownr
			setv ov00 0
			seta ov16 null
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move

		stop
	retn

	subr mate
		inst
		targ ov16
		doif targ <> null
			targ ownr
			gsub hunt
			gsub near
			doif va40 eq 1
				doif ov06 eq 0
					setv va66 0
					enum 2 15 9
						addv va66 1
					next
					doif va66 <= 16
						setv ov70 1
						setv ov00 4
					else
						setv ov00 0
					endi
				else
					setv ov00 0
				endi
				setv ov20 0
			endi
			slow
		else
			targ ownr
			setv ov00 0
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr layg
		setv va50 posl
		setv va51 post


		doif ov10 le 0
			subv va50 0
		endi

		doif ov10 gt 0
			subv va50 32
		endi
		setv va66 0
		esee 2 18 6
			addv va66 1
		next
		doif va66 < 3
			inst
			new: simp 2 18 6 "trout" 4 48 4100
			accg 2

			elas 0
			fric 80
			tick 10
			attr 195

			setv ov00 0
			setv ov01 0
			setv ov61 30
			setv ov70 0
			setv ov02 255
			setv va88 0
			doif tmvt va50 va51 <> 1
				kill targ
				setv va88 1
				stop
			endi
			mvto va50 va51
			setv vely 0
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		doif va88 = 1
			setv ov70 1
		endi
		doif va88 = 0
			setv ov70 0
		endi
		setv ov00 0
		stop
	retn

	subr matr
		doif obst down > 25 and obst rght > 25 and obst left > 5 and obst _up_ > 5
			setv va50 ov00
			setv va51 ov06
			setv va52 posl
			setv va53 post



			new: simp 2 15 9 "trout" 23 0 4000
			accg 0
			perm 30
			tick 8
			attr 195
			aero 10
			elas 10
			setv ov00 va50
			setv ov01 2000
			setv ov02 800
			setv ov05 2
			setv ov06 va51
			setv ov10 1
			setv ov11 -1
			seta ov16 null
			setv ov20 0
			setv ov61 60
			setv ov72 400
			setv ov73 400
			setv ov74 800
			doif tmvt va52 va53 <> 1
				kill targ
				setv va88 1
				gsub roam
				stop
			endi

			mvto va52 va53

			targ ownr
			kill targ
			stop
		else
			gsub roam
			stop
		endi

	retn




	subr roam
		setv va66 rand 0 10

		doif va66 lt 5
			doif ov10 ne 0
				setv ov10 0
			else
				setv ov10 rand -1 1
			endi
		endi
		doif va66 gt 5
			setv ov11 rand -1 1
		endi

		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr chsx
		inst
		setv va88 ov06
		setv va89 0
		esee 2 15 9
			doif targ <> null
				doif ov06 ne va88
					addv va89 1
				endi
			endi
		next
		doif va89 eq 0
			doif ov06 eq 0
				setv ov06 1
			else
				setv ov06 0
			endi
		endi
	retn

	subr seek
		setv va99 99999999
		inst
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				doif ov06 ne va45
					setv va50 relx ownr targ
					setv va51 rely ownr targ
					doif va50 lt 0
						negv va50
					endi
					doif va51 lt 0
						negv va51
					endi
					setv va52 va50
					mulv va52 va52
					setv va53 va51
					mulv va53 va53
					setv va54 va52
					addv va54 va53
					doif va54 lt va99
						seta va58 targ
						setv va99 va54
					endi
				endi
			endi
		next
		targ va58
		doif targ <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
		slow
	retn


	subr vect
		setv va10 rand 6 12
		setv va11 rand 0 2
	retn

	subr anim
		doif ov10 eq 0
			loop
				setv ov10 rand -1 1
			untl ov10 ne 0
		endi

		doif ov10 lt 0
			base 0
			anim [0 1 2 3 4 5 6 7 255]
		endi

		doif ov10 gt 0
			base 8
			anim [0 1 2 3 4 5 6 7 255]
		endi

	retn

	subr move
		doif rtyp room ownr = 8 or rtyp room ownr = 9
			doif posy < 1030 and gmap posx posy = 1
				setv ov11 1
			elif gmap posx posy = 2 and posx > 5000 and posy < 2200
				setv ov11 1
			endi
			mulv va10 ov10
			mulv va11 ov11


			velo va10 va11
		endi
	retn
	subr find
		setv va99 99999999
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				setv va88 0
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
			endi
		next
		targ va58
		doif targ <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
		slow
	retn
	subr hunt
		inst
		doif ov16 <> null
			targ ov16
			setv va50 posx
			setv va51 posy
			slow
			targ ownr
			doif posx lt va50
				setv ov10 1
			endi
			doif posx gt va50
				setv ov10 -1
			endi
			doif posy lt va51
				setv ov11 1
			endi
			doif posy gt va51
				setv ov11 -1
			endi
		else
			setv ov00 0
			seta ov16 null
			stop
		endi
	retn

	subr near
		setv va40 0
		inst
		doif ov16 <> null

			targ ov16
			setv va50 posx
			setv va51 posy
			setv va52 posx
			setv va53 posy
			subv va50 10
			subv va51 10
			addv va52 10
			addv va53 10
			targ ownr
			doif posx gt va50
				doif posy gt va51
					doif posx lt va52
						doif posy lt va53
							setv va40 1
						endi
					endi
				endi
			endi
			slow
		endi
	retn

endm

scrp 2 10 7 9
	addv ov01 1
	doif ov01 gt 200
		doif ov10 le 0
			anim [0 1 2 3]
			doif room targ <> -1 and carr = null
				altr room targ 3 0.2
				altr room targ 4 0.1
			endi
			over
		endi
		doif ov10 gt 0
			anim [4 5 6 7]
			doif room targ <> -1 and carr = null
				altr room targ 3 0.2
				altr room targ 4 0.1
			endi
			over
		endi
		kill targ
		stop
	endi
endm

scrp 2 18 6 9
	addv ov01 1
	setv va50 posl
	setv va51 post
	subv va50 10
	subv va51 10
	setv va66 0
	esee 2 18 6
		addv va66 1
	next
	doif ov01 gt 20 and va66 < 5
		inst
		new: simp 2 15 9 "trout" 23 24 4000
		accg 0
		elas 10
		tick 8
		perm 30
		attr 195
		aero 12
		bhvr 16
		setv ov00 0
		setv ov01 0
		setv ov02 800
		setv ov05 1
		setv ov06 rand 0 1
		setv ov10 1
		setv ov11 -1
		seta ov16 null
		setv ov20 0
		setv ov61 55
		setv ov72 400
		setv ov73 400
		setv ov74 800
		doif tmvt va50 va51 <> 1
			kill targ
			targ ownr
			velo rand -3 3 rand -3 3
			stop
		endi

		mvto va50 va51
		setv vely 0
		targ ownr
		kill targ
	endi
endm



rscr

enum 2 15 9
	kill targ
next
scrx 2 15 9 9

enum 2 10 7
	kill targ
next
scrx 2 10 7 9

enum 2 18 6
	kill targ
next
scrx 2 18 6 9



endm