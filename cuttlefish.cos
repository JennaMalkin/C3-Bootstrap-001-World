inst
reps 3
	new: simp 2 15 20 "cuttlefish" 216 0 5100
	attr 198
	accg 0
	elas 0
	setv ov10 rand 0 1
	doif ov10 eq 0
		setv ov10 -1
	endi

	mvto 3800 1964

	tick 1

	setv ov61 50
	setv ov12 2
	setv ov13 0

	setv ov70 0

	setv ov71 -1

	setv ov99 1
	rnge 200

repe
















scrp 2 15 20 9

	gsub room

	gsub swim


	doif ov00 eq 1
		velo 0 0
		gsub hovr
		wait 20
		setv ov00 0
	endi


	inst
	esee 2 16 3
		setv va00 1
	next
	doif va00 eq 1
		base 54
	else
		setv va00 0
		esee 2 16 4
			setv va00 1
		next
		doif va00 eq 1
			base 108
		else
			setv va00 0
			esee 4 0 0
				setv va00 1
			next
			doif va00 eq 1
				base 162
			endi
		endi
	endi

	slow



	doif ov00 eq 0
		doif ov12 gt 5
			setv ov12 5
		endi
		doif ov12 lt -5
			setv ov12 -5
		endi
		doif ov13 gt 5
			setv ov13 5
		endi
		doif ov13 lt -5
			setv ov13 -5
		endi

		setv velx ov12
		setv vely ov13


		doif ov12 lt 0
			setv ov10 -1
		else
			setv ov10 1
		endi


		doif ov70 eq 0
			doif ov71 eq -1
				doif ov12 le 0

					doif rand 0 3 ne 3
						setv va00 rand 1 2
						doif va00 eq 2
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			else
				doif ov13 ge 0

					doif rand 0 3 ne 3
						setv va00 rand 2 3
						doif va00 eq 2
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			endi
			subv ov12 ov99
			addv ov13 ov99
		endi

		doif ov70 eq 1
			doif ov71 eq -1
				doif ov13 le 0

					doif rand 0 3 ne 3
						setv va00 rand 2 3
						doif va00 eq 3
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			else
				doif ov12 le 0

					doif rand 0 3 ne 3
						setv va00 rand 0 1
						doif va00 eq 1
							setv va00 3
						else
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			endi
			subv ov12 ov99
			subv ov13 ov99
		endi

		doif ov70 eq 2
			doif ov71 eq -1
				doif ov12 ge 0

					doif rand 0 3 ne 3
						setv va00 rand 0 1
						doif va00 eq 1
							setv va00 3
						else
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			else
				doif ov13 le 0

					doif rand 0 3 ne 3
						setv va00 rand 0 1
						doif va00 eq 0
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			endi
			addv ov12 ov99
			subv ov13 ov99
		endi

		doif ov70 eq 3
			doif ov71 eq -1
				doif ov13 ge 0

					doif rand 0 3 ne 3
						setv va00 rand 0 1
						doif va00 eq 1
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			else
				doif ov12 ge 0

					doif rand 0 3 ne 3
						setv va00 rand 1 2
						doif va00 eq 1
							negv ov71
						endi
						setv ov70 va00
					else
						setv ov00 1
					endi
				endi
			endi
			addv ov12 ov99
			addv ov13 ov99
		endi
	endi

	subr room
		doif rtyp room ownr <> 9
			elas 50
			loop
				addv ov86 1
				doif ov86 >= 0
					addv ov87 1


				endi
				accg ov87
			untl rtyp room ownr = 9 or ov86 >= 100
			doif ov86 >= 100
				gsub fout
				kill ownr
			endi
		endi
		doif rtyp room ownr = 9
			elas 0
			setv ov86 0
			setv ov87 0
		endi
		accg ov87
	retn







	subr swim
		anim []
		doif ov10 gt 0
			base 0
		else
			base 10
		endi
		anim [0 1 2 3 4 5 6 7 8 9 255]
	retn

	subr hovr
		anim []
		doif ov10 gt 0
			base 20
		else
			base 24
		endi

		anim [0 1 2 3 255]
	retn

	subr grab
		anim []
		doif ov10 gt 0
			base 28
		else
			base 39
		endi
		anim [0 1 2 3 4 5 6 7 8 9 10]
		over
	retn


	subr fout
		anim []
		base 50
		anim [0 1 2 3]
		over
	retn


	subr f_in
		anim []
		base 50
		anim [3 2 1 0]
		over
	retn


endm








rscr
enum 2 15 20
	kill targ
next
scrx 2 15 20 9