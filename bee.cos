iscr
setv va66 0
reps 4
	new: simp 2 17 5 "bee" 2 72 50
	perm 100
	tick 10
	attr 4
	aero 5
	elas 20
	clac 0
	setv ov00 0
	setv ov01 2000
	setv ov02 500
	setv ov02 500
	setv ov61 40
	setv ov80 100
	setv ov81 10
	setv ov82 120
	doif va66 = 0
		mvto 1860 650
		anim [1]
	endi
	doif va66 = 1
		mvto 2360 650
		anim [0]

		tick 0
	endi
	doif va66 = 2
		mvto 2660 700
		anim [0]

		tick 0
	endi
	doif va66 = 3
		mvto 3100 700
		anim [0]

		tick 0
	endi

	addv va66 1
repe

scrp 2 17 5 1



	seta va17 from
	setv va88 90
	setv va89 1

	setv va50 posx
	setv va51 posy
	subv va50 10
	addv va51 8
	setv va66 0
	inst
	esee 2 14 1
		addv va66 1
	next
	doif va66 < 12
		reps 4
			new: simp 2 14 1 "bee" 72 0 2500
			perm 50
			accg 0
			tick 4
			clac 0

			bhvr 17
			attr 199
			aero 5
			elas 20

			setv ov30 0

			setv ov31 4

			setv ov32 8

			setv ov33 10

			setv ov34 19

			setv ov35 28

			setv ov36 32

			setv ov37 36

			setv ov38 40

			setv ov39 44

			setv ov40 46

			setv ov41 55

			setv ov42 64

			setv ov43 68


			setv ov00 0
			setv ov01 2000
			setv ov02 300
			setv ov05 1
			setv ov06 rand 0 1
			setv ov07 0
			setv ov10 1
			setv ov11 -1
			seta ov16 null
			seta ov17 va17
			seta ov19 ownr
			setv ov61 40
			setv ov72 400
			setv ov73 400
			setv ov74 800

			bhvr 17
			setv ov80 va82

			setv ov88 va88
			setv ov89 0




			anim [5 7]
			doif tmvt va50 va51 <> 1
				kill targ
				targ ownr
			else
				mvto va50 va51
				setv vely 0
			endi
		repe
	endi
endm


scrp 2 14 1 1
	seta ov17 from
	setv ov88 90
	setv ov89 1
	stim writ from 88 1
	targ ownr
endm


scrp 2 14 1 9
	addv ov01 1
	subv ov02 1
	doif carr = null
		doif rtyp room ownr = 8 or rtyp room ownr = 9
			subv ov02 100
		endi
	endi



	doif rand 0 250 = 0
		snde "beez"
	endi

	doif ov07 = 1
		gsub quen
	endi
	doif ov01 gt 2010
		setv va66 ov01
		modv va66 10
		doif va66 eq 0
			addv ov20 1
		endi
	endi

	doif ov02 < ov74
		setv ov00 2
	endi

	doif ov02 < ov73
		setv ov00 1
	endi

	doif ov02 <= 0
		setv ov00 99
	endi

	doif ov00 eq 99
		gsub die_
	endi











	doif ov17 <> null and ov88 > 0
		subv ov88 1
		doif ov88 > 80
			gsub atak
		endi
		doif ov88 = 0
			seta ov17 null
		endi
	endi

	doif ov00 eq 0
		gsub roam
	endi
	doif ov00 = 1
		gsub gfod
	endi
	doif ov00 = 2
		gsub nest
	endi

	subr quen

		setv va47 2
		setv va48 17
		setv va49 5
		gsub fnd2
		doif ov16 <> null
			targ ov16
			doif tick = 0
			targ ownr
			gsub hunt


			doif touc ownr ov16 <> 0






				gsub bnst
			endi
			else
			targ ownr
			setv ov00 0
			gsub roam
			endi
		else
			targ ownr
			setv ov00 0
			gsub roam
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr bnst
		seta va16 ov16
		enum 2 17 5
			doif targ = va16
				tick 30
				anim [1]
			endi
		next
		targ ownr
		kill targ
	retn

	subr die_
		inst
		setv va50 posx
		setv va51 posy
		setv va52 ov10
		subv va50 20
		subv va51 8
		doif ov01 gt 2000
			new: simp 2 10 21 "bee" 26 10 2000
		else
			new: simp 2 10 21 "bee" 26 10 2000
		endi
		accg 2

		tick 50
		attr 195
		aero 0
		elas 0
		fric 100
		bhvr 16
		setv ov10 va52
		setv ov01 0
		setv ov61 10
		doif tmvt va50 va51 <> 1
			mvsf va50 va51
		else
		mvto va50 va51
		endi
		setv ov02 50
		setv vely 0
		doif ov10 <= 0
			base ov33
		else
			base ov44
		endi
		anim [0 1 2 3 4 5 6 7 8 255]
		targ ownr
		kill targ
	retn

	subr gfod
		setv va47 2
		setv va48 7
		setv va49 0
		doif ov16 = null
			gsub find
		endi
		doif ov16 <> null
			targ ownr
			gsub hunt
			doif touc ownr ov16 <> 0
				targ ownr
				addv ov02 ov72
				mesg writ ov16 303
				doif ov02 gt ov74
					setv ov00 2
				endi
			endi
		else
			targ ownr
			setv ov00 0
			gsub roam
			stop
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr atak
		inst
		snde "beez"
		seta va17 ov17
		seta va19 ov19
		esee 2 14 1
			doif ov17 = null and targ <> ownr and ov88 = 0 and ov19 = va19
				seta ov17 va17
				setv ov88 90
			endi
		next
		seta ov16 ov17
		doif ov16 <> null
			targ ownr
			gsub hunt
		else
			targ ownr
			setv ov00 0
			gsub roam
		endi
		targ ownr
		doif ov89 = 1
			gsub die_
		endi
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr nest
		inst
		doif ov19 = null
			setv ov00 0
			stop
		endi
		seta ov16 ov19
		targ ov16
		doif targ <> null
			targ ownr
			seta ov16 ov19
			gsub hunt

			setv va02 ov02
			setv va80 ov80

			doif touc ownr ov19 = 1
				targ ov19
				addv ov02 va80
				targ ownr
				kill targ
				setv ov00 0
			endi
		else
			targ ownr
			seta ov19 null
			setv ov00 0
		endi
		targ ownr
		setv ov15 10
		gsub vect
		gsub anim
		gsub move
		stop
		slow
	retn

	subr roam
		setv va66 rand 0 12

		doif va66 lt 5
			doif va66 = 1
				setv ov10 1
			elif va66 = 2
				setv ov10 -1
			elif va66 = 3
				setv ov11 1
			elif va66 = 4
				setv ov11 -1
			endi
		endi

		gsub obst
		gsub vect
		gsub anim

		gsub move
		stop
	retn

	subr obst

		doif obst 0 lt 120
			setv ov10 1
		endi
		doif obst 1 lt 120
			setv ov10 -1
		endi

		doif obst 2 lt 60
			setv ov11 1
		endi
		doif obst 3 lt 100
			setv ov11 -1
		endi

	retn

	subr vect
		setv va10 rand 8 14
		setv va11 rand 4 8
		mulv va10 ov10
		mulv va11 ov11
		doif ov12 < va10
			addv ov12 rand 2 6
		elif ov12 > va10
			subv ov12 rand 2 6
		endi
		doif ov13 < va11
			addv ov13 rand 2 6
		elif ov13 > va11
			subv ov13 rand 2 6
		endi
		setv va10 ov12
		setv va11 ov13

	retn

	subr anim
		doif ov12 eq 0
			loop
				setv ov12 rand -1 1
			untl ov12 ne 0
		endi

		doif ov12 <= 0
			anim [1 3 255]
		endi

		doif ov12 > 0
			anim [5 7 255]
		endi
	retn

	subr move
		velo va10 va11
	retn

	subr find
		setv va99 99999999
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				setv va88 0
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
			endi
		next
		doif va58 <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
	retn

	subr fnd2
		setv va99 99999999
		seta va58 null
		seta va19 ov19
		esee va47 va48 va49
			doif targ <> va19
				inst
				setv va88 0
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
				slow
			endi
		next
		doif va58 <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
		slow
	retn


	subr swm2
		setv va88 0
		esee 2 14 1
			inst
			doif targ <> ownr
				setv va88 1
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				addv va20 va50
				addv va21 va51
			endi
			slow
		next
		doif va88 = 1
			doif va20 <= 0
				addv va10 -4
			endi
			doif va20 > 0
				addv va10 4
			endi
			doif va21 <= 0
				addv va11 -4
			endi
			doif va21 > 0
				addv va11 4
			endi

		endi
		stop
	retn

	subr hunt
		inst
		doif ov16 <> null
			targ ov16
			setv va50 posx
			setv va51 posy
			targ ownr
			doif posx lt va50
				setv ov10 1
			endi
			doif posx gt va50
				setv ov10 -1
			endi
			doif posy lt va51
				setv ov11 1
			endi
			doif posy gt va51
				setv ov11 -1
			endi
		else
			setv ov00 0
			stop
		endi
	retn

	subr near
		setv va40 0
		doif ov16 <> null
			inst
			targ ov16
			setv va50 posx
			setv va51 posy
			setv va52 posx
			setv va53 posy
			subv va50 10
			subv va51 50
			addv va52 10
			addv va53 50
			targ ownr
			doif posx gt va50
				doif posy gt va51
					doif posx lt va52
						doif posy lt va53
							setv va40 1
						endi
					endi
				endi
			endi
			slow
		endi
	retn

endm

scrp 2 14 1 6
	inst
	setv ov12 0
	setv ov13 0
endm


scrp 2 17 5 9
	doif ov02 > 0
		subv ov02 1
	endi
	setv va02 ov02
	setv va80 ov80
	setv va82 ov82
	rnge 600
	esee 2 14 1
		addv va66 1
	next

	doif ov02 > 100 and ov02 < 3500 and va66 < 10
		inst

		subv ov02 ov81
		subv ov02 va80
		setv va50 posx
		setv va51 posy
		subv va50 10
		addv va51 8
		new: simp 2 14 1 "bee" 72 0 2500
		perm 50
		accg 0
		tick 4
		clac 0

		bhvr 17
		attr 199
		aero 5
		elas 20

		setv ov30 0

		setv ov31 4

		setv ov32 8

		setv ov33 10

		setv ov34 19

		setv ov35 28

		setv ov36 32

		setv ov37 36

		setv ov38 40

		setv ov39 44

		setv ov40 46

		setv ov41 55

		setv ov42 64

		setv ov43 68


		setv ov00 0
		setv ov01 2000
		setv ov02 300
		setv ov05 1
		setv ov06 rand 0 1
		setv ov07 0
		setv ov10 1
		setv ov11 -1
		seta ov16 null
		seta ov17 null
		seta ov19 ownr
		setv ov61 40
		setv ov72 400
		setv ov73 400
		setv ov74 800

		bhvr 17
		setv ov80 va82

		setv ov88 0




		anim [5 7]
		doif tmvt va50 va51 <> 1
			kill targ
			targ ownr
		else
			mvto va50 va51
*			slow
			setv vely 0
		endi
		targ ownr
	elif ov02 >= 3500 and va66 < 10

		inst
		subv ov02 3000
		subv ov02 va80
		setv va50 posx
		setv va51 posy
		subv va50 10
		addv va51 8
		new: simp 2 14 1 "bee" 37 36 2500
		perm 50
		accg 0
		tick 6
		clac 0
		bhvr 17
		attr 199
		aero 5
		elas 20

		setv ov30 0

		setv ov31 4

		setv ov32 8

		setv ov33 10

		setv ov34 19

		setv ov35 28

		setv ov36 32

		setv ov37 36

		setv ov38 40

		setv ov39 44

		setv ov40 46

		setv ov41 55

		setv ov42 64

		setv ov43 68


		setv ov00 0
		setv ov01 2000
		setv ov02 300
		setv ov05 1
		setv ov06 rand 0 1
		setv ov07 1
		setv ov10 1
		setv ov11 -1
		seta ov16 null
		seta ov17 null
		seta ov19 ownr
		setv ov61 41
		setv ov72 400
		setv ov73 400
		setv ov74 800
		setv ov75 1

		setv ov79 0
		setv ov80 va82
		setv ov88 75
		anim [5 7]
		doif tmvt va50 va51 <> 1
			kill targ
			targ ownr
		else
			mvto va50 va51
*			slow
			setv vely 0
		endi
		targ ownr
	endi
	doif ov02 < 100
		doif totl 2 14 1 < 3
			addv ov02 200
		endi
	endi
endm

scrp 2 17 5 500
	addv ov02 _p1_
endm

scrp 2 10 21 9
	subv ov02 1
	doif ov02 <= 0
		doif carr = null
			doif room targ <> -1 and carr = null
				altr room targ 3 0.1
				altr room targ 4 0.1
			endi
			kill targ
		endi
	endi
endm

scrp 2 10 21 6
	subv ov02 1
	doif ov10 <= 0
		anim [18]
	else
		anim [22]
	endi
endm

scrp 2 14 1 12
	stim writ from 80 1
	kill ownr
endm
scrp 2 10 21 12
	stim writ from 81 1
	kill ownr
endm

rscr

enum 2 14 1
	kill targ
next
scrx 2 14 1 9
scrx 2 14 1 6

enum 2 10 21
	kill targ
next
scrx 2 10 21 9
scrx 2 10 21 6
scrx 2 10 21 12


enum 2 17 5
	kill targ
next
scrx 2 17 5 9
scrx 2 17 5 6
endm