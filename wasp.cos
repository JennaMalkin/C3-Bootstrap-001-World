iscr
inst
reps 10
	new: simp 2 14 6 "wasp" 221 0 300
	perm 100
	tick 6
	attr 199
	aero 5
	accg 0
	clac 0
	elas 10
	bhvr 17
	setv ov00 0
	setv ov01 2000
	setv ov02 800
	setv ov05 2
	setv ov06 rand 0 1
	setv ov10 1
	setv ov11 -1
	seta ov16 null
	seta ov17 null
	setv ov20 0
	setv ov61 45
	setv ov72 400
	setv ov73 400
	setv ov74 800
	setv ov75 1
	anim [5 7]
	mvto rand 1800 2300 rand 1900 2050
	setv vely 0
repe
targ ownr

endm

scrp 2 14 6 12
	stim writ from 80 1
	kill ownr
endm


scrp 2 14 6 1
	seta ov17 from
	setv ov88 80
	setv ov89 1
	stim writ from 88 1
	targ ownr

endm

scrp 2 14 6 9
	addv ov01 1
	subv ov02 1
	addv ov20 1

	doif ov02 < ov73
		setv ov00 1
	endi

	doif ov00 eq 99

	endi


	doif ov00 eq 99
		gsub die_
	endi

	doif ov17 <> null
		doif ov88 > 0
			subv ov88 1
			doif ov88 > 40
				gsub atak
			endi
			doif ov88 = 0
				seta ov17 null
			endi
		endi
	endi

	doif ov00 = 1
		gsub gfod
	endi


	doif ov00 eq 0
		gsub roam
	endi


	subr die_
		setv va50 posx
		setv va51 posy
		setv va52 ov10
		subv va50 20
		subv va51 8
		doif ov01 gt 2000
			new: simp 2 10 28 "wasp" 1 0 2000
		else
			new: simp 2 10 28 "wasp" 1 1 2000
		endi
		accg 2

		tick 4
		attr 195
		aero 0
		setv ov10 va52
		setv ov01 0
		doif tmvt va50 va51 <> 1
			kill targ
			kill ownr
			stop
		endi
		mvto va50 va51
		setv ov61 18
		setv vely 0
		targ ownr
		kill targ
	retn

	subr gfod
		inst
		setv va47 2
		setv va48 8
		setv va49 0
		doif ov16 = null
			gsub find
		endi
		doif ov16 = null
			setv va47 2
			setv va48 9
			setv va49 0
			gsub find
		endi
		doif ov16 <> null
			targ ownr
			gsub hunt
			doif touc ownr ov16 <> 0
				targ ownr
				addv ov02 ov72
				mesg writ ov16 12
				doif ov02 gt ov74
					setv ov00 0
				endi
			endi
		else
			targ ownr
			setv ov00 0
			gsub roam
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr atak
		snde "wasp"
		inst
		seta va17 ov17
		esee 2 14 6
			doif ov17 = null and targ <> ownr and ov88 = 0 and targ <> null
				seta ov17 va17
				setv ov88 80
			endi
		next
		seta ov16 ov17
		doif ov16 <> null
			targ ownr
			gsub hunt


			doif touc ownr ov16 <> 0






				targ ov16
				doif fmly = 4
					stim writ targ 88 1
					targ ownr
				endi
			else
				targ ownr
				setv ov00 0
				gsub roam
			endi
			targ ownr
			gsub vect
			gsub anim
			gsub move
			stop
		endi
	retn

	subr swrm
		setv va88 0
		esee 2 14 6
			doif targ <> ownr and targ <> null
				setv va88 1
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				addv va20 va50
				addv va21 va51
			endi
		next
		doif va88 = 1
			doif va20 <= 0
				setv ov10 -1
			endi
			doif va20 > 0
				setv ov10 1
			endi
			doif va21 <= 0
				setv ov11 -1
			endi
			doif va21 > 0
				setv ov11 1
			endi

		endi
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr roam
		setv va66 rand 0 12
		doif va66 lt 5
			doif obst down > 5
				snde "wasp"
			endi
			doif va66 = 1
				setv ov10 1
			elif va66 = 2
				setv ov10 -1
			elif va66 = 3
				setv ov11 1
			elif va66 = 4
				setv ov11 -1
			endi
		endi


		gsub obst
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr obst

		doif obst 0 lt 120
			setv ov10 1
		endi
		doif obst 1 lt 120
			setv ov10 -1
		endi

		doif obst 2 lt 60
			setv ov11 1
		endi




	retn

	subr vect
		setv va10 rand 8 14
		setv va11 rand 4 8
		mulv va10 ov10
		mulv va11 ov11
		doif ov12 < va10
			addv ov12 4
		elif ov12 > va10
			subv ov12 4
		endi
		doif ov13 < va11
			addv ov13 4
		elif ov13 > va11
			subv ov13 4
		endi
		setv va10 ov12
		setv va11 ov13

	retn

	subr anim
		doif ov12 eq 0
			loop
				setv ov12 rand -1 1
			untl ov12 ne 0
		endi

		doif obst down > 0
			doif ov12 <= 0
				anim [18 19 255]
			endi

			doif ov12 > 0
				anim [20 21 255]
			endi
		endi


		doif obst down <= 0
			doif ov12 <= 0
				anim [0 1 2 3 4 5 6 7 8]
			else
				anim [9 10 11 12 13 14 15 16 17]
			endi
		endi
	retn

	subr move

		setv velx va10
		setv vely va11
	retn

	subr find
		inst
		setv va99 99999999
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				setv va88 0
				setv va50 relx ownr targ
				setv va51 rely ownr targ
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
			endi
		next
		doif va58 <> null
			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
		slow
	retn


	subr hunt
		inst
		targ ov16
		doif targ <> null
			setv va50 posx
			setv va51 posy
			targ ownr
			doif posx lt va50
				setv ov10 1
			endi
			doif posx gt va50
				setv ov10 -1
			endi
			doif posy lt va51
				setv ov11 1
			endi
			doif posy gt va51
				setv ov11 -1
			endi
		else
			targ ownr
			seta ov16 null
			setv ov00 0
		endi
	retn

endm

scrp 2 14 6 6
	inst
	setv ov12 0
	setv ov13 0
endm

scrp 2 10 28 9
	inst
	doif carr = null
		doif room targ <> -1 and carr = null
			altr room targ 3 0.1
			altr room targ 4 0.1
		endi

		kill targ
	endi
endm




rscr

enum 2 14 6
	kill targ
next
scrx 2 14 6 9
scrx 2 14 6 6

enum 2 10 28
	kill targ
next
scrx 2 10 28 9
scrx 2 10 28 6

endm