


































iscr










setv va00 0
loop

	new: simp 2 32 23 "bacteria" 2 0 6999

	attr 144

	accg 0


	seta ov00 null
	seta ov01 null
	setv ov02 0
	setv ov03 0



	setv ov10 rand 6000 18000

	setv ov11 rand 1 ov10
	setv ov04 ov10
	subv ov04 ov11

	setv ov12 rand 5 100
	divv ov12 100.0

	setv ov13 rand 70 100
	divv ov13 100.0

	setv ov14 rand 5 25
	divv ov14 100.0


	setv ov15 rand 82 89

	setv ov16 rand 70 81


	setv ov17 rand 5 50
	divv ov17 1000.0

	setv ov18 69

	setv ov19 rand 5 50
	divv ov19 1000.0



	setv ov30 60
	setv ov31 40

	setv ov32 0

	setv ov33 100
	setv ov34 80
	setv ov35 30
	setv ov36 35
	setv ov38 80

	setv ov37 2000

	setv ov40 0


	setv ov97 0



	setv va01 rand 1 100
	doif va01 le 65

		loop
			mvto rand 140 2940 rand 1380 2610
		untl room targ ne -1
	elif va01 le 70

		loop
			mvto rand 4400 7100 rand 50 790
		untl room targ ne -1

	elif va01 le 80

		loop
			mvto rand 760 4070 rand 20 1070
		untl room targ ne -1

	elif va01 le 90

		loop
			mvto rand 420 6560 rand 3200 4010
			setv va04 grap posx posy
		untl va04 ne -1 and va04 ne 374 and va04 ne 367 and va04 ne 366 and va04 ne 365 and va04 ne 364 and va04 ne 363 and va04 ne 362 and va04 ne 377 and va04 ne 378 and va04 ne 379 and va04 ne 380

	else

		loop
			mvto rand 3380 6150 rand 1650 2420
		untl room targ ne -1
	endi

	velo rand -1 1 rand -1 1



	tick rand 13 17

	addv va00 1

untl va00 eq 50
endm


























scrp 2 32 23 9





	doif ov11 le 0



		kill ownr

	endi




	doif ov32 eq 0
		pose 0
	else
		pose 1
		doif ov32 gt 0
			subv ov32 1
		endi
	endi






	doif ov00 ne null


		addv ov04 1

		targ ov00
		doif fmly eq 4
			targ ownr

			setv va40 ov15
			addv va40 20
			targ ov00
			setv va41 chem va40
			setv va42 va41
			mulv va42 10
			targ ownr
			subv ov11 va42

			subv ov11 1

			doif ov03 eq 0


				doif va41 le ov14

					setv ov03 1
				endi
			else

				doif va41 ge ov13

					setv ov03 0
				else

					setv va45 ov15
					setv va46 ov16
					setv va47 ov17
					setv va48 ov18
					setv va49 ov19
					targ ov00
					chem va45 0.02
					chem va46 va47
					doif va48 ne 69

						chem va48 va49
					endi
				endi
			endi
			targ ownr
		else

			targ ownr
			subv ov11 1
		endi

	else

		subv ov11 1

		setv ov03 0
	endi










	seta va00 ov00
	seta va01 ov01


	doif ov00 ne null





		setv va04 room ov00
		setv va05 room ownr
		doif va04 ne va05
			targ ov00
			setv va02 posx
			setv va03 posy
			targ ownr
			setv ov02 0
			attr 144
			mvto va02 va03
		endi



		doif ov02 eq 0 and va04 eq va05
			gsub coll
		endi


		setv va02 relx ownr ov00
		setv va03 rely ownr ov00

		divv va02 2
		divv va03 2
		doif va02 gt 3
			setv va02 3
		elif va02 lt -3
			setv va02 -3
		endi
		doif va03 gt 3
			setv va03 3
		elif va03 lt -3
			setv va03 -3
		endi
		velo va02 va03


	elif ov02 eq 0

		gsub coll
	endi







	doif ov97 eq 1 or rand 1 32 ne 1
		stop
	endi



	setv va99 rand 1 ov33

	doif va99 le ov35 or va99 le ov36 or va99 le ov34 or ov00 eq null






		setv va02 posl
		setv va03 post




		setv va04 grap va02 va03
		doif va04 eq -1 or va04 eq 374 or va04 eq 367 or va04 eq 366 or va04 eq 365 or va04 eq 364 or va04 eq 363 or va04 eq 362 or va04 eq 377 or va04 eq 378 or va04 eq 379 or va04 eq 380
			stop
		endi





		doif ov02 eq 1

			etch 0 0 0




				setv va04 attr
				andv va04 48

				doif targ ne null and targ ne pntr and va04 ne 48 and va04 ne 16 and va04 ne 32 and targ ne va01 and targ ne va00

					doif va00 eq null

						seta va98 targ
						gsub atch
					endi

					gsub tran

				endi

			next
		endi


	endi




	doif totl 2 32 23 lt ov31 and ov02 eq 1
		seta va98 null
		gsub copy
	endi






	doif ov04 gt ov37 and va99 le ov34 and ov00 ne null and ov03 ne 1


		seta ov01 ov00
		seta ov00 null
		setv ov03 0
		stop
	endi

	stop







	subr tran

		seta va98 targ

		doif fmly eq 4 
			doif gnus eq 2

				mulv va99 0.8
			elif gnus eq 3
				mulv va99 1.1
			endi
		endi


		targ ownr
		doif ov00 ne null
			targ ov00
			doif fmly eq 4 
				doif gnus eq 2

					mulv va99 0.8
				elif gnus eq 3
					mulv va99 1.1
				endi
			endi
			targ ownr
		endi


		doif va99 le ov35 and totl 2 32 23 lt ov31

			gsub copy

		elif va99 le ov36 and ov03 ne 1


			gsub atch

		elif ov04 gt ov37 and va99 le ov34 and ov03 ne 1


			gsub atch

		endi
	retn







	subr copy


		targ ownr



		doif totl 2 32 23 lt ov30



			setv va04 ov11
			divv va04 1.0
			divv va04 ov10

			doif va04 gt ov12 or totl 2 32 23 lt ov31

				setv va04 0

				doif posx ge 140 and posx le 2940 and posy ge 1380 and posy le 2610

					doif rand 1 2 eq 1
						addv va04 1
					endi
				elif posx ge 4400 and posy le 7100 and posx le 50 and posy le 790

					doif rand 1 4 eq 1
						addv va04 1
					endi
				else

					doif rand 1 6 eq 1
						addv va04 1
					endi
				endi



				doif ov03 eq 1
					addv va04 1
				endi

				doif va04 ge 1

					seta ov98 va98

					mesg wrt+ ownr 100 va02 va03 0
					stop
				endi
			endi
		endi
	retn





	subr atch


		targ va98
		doif fmly eq 4
			targ ownr
			setv ov11 ov10
		endi

		targ ownr
		seta ov01 ov00
		seta ov00 va98

		setv ov04 0
		stop
	retn





	subr coll

		inst
		targ ownr
		doif obst 0 gt 3 and obst 1 gt 3 and obst 2 gt 3 and obst 3 gt 3 and room ownr ne -1
			attr 208
			setv ov02 1
		endi
		slow
	retn

endm








scrp 2 32 23 100
	inst





	seta va00 ov00
	seta va98 ov98
	setv va99 ov99
	setv va97 ov97



	new: simp 2 32 23 "bacteria" 2 0 6999



	attr 144

	setv ov02 0

	accg 0

	seta ov00 va98


	seta ov01 va00

	seta va06 targ

	targ ownr


	setv va10 ov10
	setv va12 ov12
	setv va13 ov13
	setv va14 ov14
	setv va15 ov15
	setv va16 ov16
	setv va17 ov17
	setv va18 ov18
	setv va19 ov19

	setv va30 ov30
	setv va31 ov31
	setv va32 ov32
	setv va33 ov33
	setv va34 ov34
	setv va35 ov35
	setv va36 ov36
	setv va37 ov37
	setv va38 ov38

	targ va06

	setv ov02 0

	setv ov03 0

	setv ov10 va10
	setv ov12 va12
	setv ov13 va13
	setv ov14 va14
	setv ov15 va15
	setv ov16 va16
	setv ov17 va17
	setv ov18 va18
	setv ov19 va19

	setv ov30 va30
	setv ov31 va31
	setv ov32 va32
	setv ov33 va33
	setv ov34 va34
	setv ov35 va35
	setv ov36 va36
	setv ov37 va37
	setv ov38 va38


	setv ov04 0


	doif totl 2 32 23 lt ov31


		setv ov10 rand 6000 18000
		setv ov11 ov10
	else
		setv ov11 ov10
	endi




	doif rand 1 3 eq 1

		setv va07 rand 1 9

		doif va07 eq 1 and totl 2 32 23 ge ov31

			setv ov10 rand 6000 18000
			setv ov11 ov10
		elif va07 eq 2

			setv ov12 rand 5 100
			divv ov12 100.0
		elif va07 eq 3

			setv ov13 rand 70 100
			divv ov13 100.0
		elif va07 eq 4

			setv ov14 rand 5 25
			divv ov14 100.0
		elif va07 eq 5

			setv ov15 rand 82 89
		elif va07 eq 6

			setv ov16 rand 70 81
		elif va07 eq 7

			setv ov17 rand 5 50
			divv ov17 1000.0
		elif va07 eq 8


			doif rand 1 20 eq 1
				setv ov18 rand 70 81
			endi
		elif va07 eq 9

			setv ov19 rand 5 50
			divv ov19 1000.0
		endi
	endi



	mvto _p1_ _p2_

	doif va97 eq 0

		doif va98 eq null

			velo rand -1 1 rand -1 1
		endi
	else
		doif ov99 eq 2
			velo 3 0
		elif ov99 eq 3
			velo -3 0
		else
			velo 0 3
		endi
	endi

	tick 15






	targ ownr

	doif va98 ne null
		seta ov01 va98
	endi


	setv ov97 0



	addv ov40 1

endm







scrp 2 32 23 101
	inst

	setv va34 ov34
	mulv va34 2

	setv va99 rand 1 ov33

	doif totl 2 32 23 le ov30 and va99 le ov38


		seta ov98 null
		setv ov97 1

		mesg wrt+ ownr 100 _p1_ _p2_ 0

	elif ov03 eq 0 and va99 le va34

		attr 144
		setv ov02 0
		seta ov01 ov00
		seta ov00 null
		mvto _p1_ _p2_
		doif ov99 eq 2
			velo 3 0
		elif ov99 eq 3
			velo -3 0
		else
			velo 0 3
		endi
	endi
endm


scrp 2 32 23 255

endm

rscr
enum 2 32 23
	kill targ
next
endm